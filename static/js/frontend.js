function init(){"use strict";var e=productivitree.config.tree,t=productivitree.animation,r=productivitree.objects.treeHandler;scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),renderer=new THREE.WebGLRenderer,renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),container.appendChild(renderer.domElement),camera.position.x=5,camera.position.y=5,camera.position.z=5,camera.lookAt(new THREE.Vector3(0,5,0));var n=new THREE.SpotLight(16777215);n.position.set(100,150,10),n.shadow.camera.near=20,n.shadow.camera.far=50,n.castShadow=!0,scene.add(n);var a=new THREE.AmbientLight(16777215);scene.add(a),r.addTreeToScene(e.start,e.end),productivitree.ui.stats.init(),t.morph.createMorphAnimation("trunkGrow",r.getTrunkMesh()),t.morph.createMorphAnimation("leaveGrow",r.getTwigMesh()),t.dom.addPlayListener(".js-play-animation","all",60),productivitree.controls.mouse.init(),window.addEventListener("resize",productivitree.helpers.adjustWindowResize,!1),prevTime=Date.now(),render()}function render(){renderer.render(scene,camera),stats.update(renderer),TWEEN.update(),productivitree.controls.mouse.update();var e=Date.now();animationMixers.trunkGrow.update(.001*(e-prevTime)),animationMixers.leaveGrow.update(.001*(e-prevTime)),prevTime=e,requestAnimationFrame(render)}productivitree.animation.morph=function(){function e(e,t){animationMixers[e]=new THREE.AnimationMixer(t),r[e]={},r[e].clip=THREE.AnimationClip.CreateFromMorphTargetSequence(e,t.geometry.morphTargets,60)}function t(e,t){if("all"!==e)animationMixers[e].clipAction(r[e].clip).setDuration(t).play();else for(var n in r)r.hasOwnProperty(n)&&animationMixers[n].clipAction(r[n].clip).setDuration(t).play()}var r={};return{createMorphAnimation:e,playAnimation:t}}(),productivitree.animation.dom=function(){function e(e){return document.querySelector(e)}function t(t,a,o){r=e(t),r.addEventListener("click",function(){n(a,o)})}var r,n=productivitree.animation.morph.playAnimation;return{addPlayListener:t}}(),productivitree.config={tree:{start:{seed:400,segments:6,levels:5,vMultiplier:1.1,twigScale:.1,initalBranchLength:.3,lengthFalloffFactor:.8,lengthFalloffPower:.9,clumpMax:.45,clumpMin:.4,branchFactor:2.5,dropAmount:.1,growAmount:2,sweepAmount:.01,maxRadius:.2,climbRate:-.2,trunkKink:.093,treeSteps:10,taperRate:.8,radiusFalloffRate:.75,twistRate:3.02,trunkLength:2.4},end:{seed:400,segments:6,levels:5,vMultiplier:1.1,twigScale:.1,initalBranchLength:1,lengthFalloffFactor:.8,lengthFalloffPower:.9,clumpMax:.45,clumpMin:.4,branchFactor:2.5,dropAmount:.1,growAmount:0,sweepAmount:.01,maxRadius:.2,climbRate:.3,trunkKink:.093,treeSteps:10,taperRate:.9,radiusFalloffRate:.65,twistRate:3.02,trunkLength:2.4}}},productivitree.controls.gui=function(){function e(e){var t=new dat.GUI;t.add(e,"seed").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"segments").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"levels").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"vMultiplier").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"twigScale").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"initalBranchLength").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"lengthFalloffFactor").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"lengthFalloffPower").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"clumpMax").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"clumpMin").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"branchFactor").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"dropAmount").min(-.5).max(.5).onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"growAmount").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"sweepAmount").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"maxRadius").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"climbRate").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"trunkKink").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"treeSteps").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"taperRate").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"radiusFalloffRate").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"twistRate").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)}),t.add(e,"trunkLength").onChange(function(){productivitree.objects.treeHandler.addTreeToScene(e)})}function t(e,t){var r={},n=new dat.GUI;e.forEach(function(a,o){r[a]=0,n.add(r,e[o],0,1).step(.01).listen().onChange(function(e){t.morphTargetInfluences[o]=e})})}return{initConfigurator:e,initMorphControl:t}}(),productivitree.controls.mouse=function(){function e(){r=new THREE.OrbitControls(camera,renderer.domElement),r.enableDamping=!0,r.dampingFactor=.25,r.enableZoom=!1,r.target=new THREE.Vector3(0,5,0),r.autoRotate=!1,r.autoRotateSpeed=.3,r.maxPolarAngle=Math.PI/2,r.enablePan=!1}function t(){r.update()}var r;return{init:e,update:t}}(),productivitree.helpers=function(){function e(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}return{adjustWindowResize:e}}();var productivitree=productivitree||{},container=document.getElementById("container"),camera,renderer,scene,stats,treeContainer,prevTime,animationMixers={};productivitree.controls={},productivitree.animation={},productivitree.objects={},productivitree.ui={},productivitree.helpers={},window.onload=init,productivitree.objects.treeHandler=function(){function e(e,t){u=r(m,e,t);var a=scene.getObjectByName("treeContainer"),i=scene.getObjectByName("twig"),c=scene.getObjectByName("trunk");a&&scene.remove(a),i&&scene.remove(i),c&&scene.remove(c),treeContainer=new THREE.Object3D;var d=u.trunkMorphArray[0],h=u.leaveMorphArray[0],f=new THREE.MeshLambertMaterial({morphTargets:!0}),g=(new THREE.TextureLoader).load("static/textures/tree.jpg");g.wrapS=THREE.RepeatWrapping,g.wrapT=THREE.RepeatWrapping,f.map=g,f.doubleSided=!0,f.transparent=!0,d.computeFaceNormals(),h.computeFaceNormals(),d.computeVertexNormals(!0),h.computeVertexNormals(!0),p=new THREE.Mesh(d,f),p.name="trunk",s=n(m),p.morphTargetBase=-1,p.morphTargetDictionary={},p.morphTargetInfluences=[];var T=new THREE.MeshLambertMaterial({morphTargets:!0});T.map=(new THREE.TextureLoader).load("static/textures/leaf.png"),T.side=THREE.DoubleSide,T.transparent=!0,l=new THREE.Mesh(h,T),l.name="twig",l.morphTargetBase=-1,l.morphTargetDictionary={},l.morphTargetInfluences=[],s.forEach(function(e,t){p.morphTargetDictionary[e]=t,p.morphTargetInfluences.push(0),l.morphTargetDictionary[e]=t,l.morphTargetInfluences.push(0)}),o(p,u.trunkMorphArray,s),o(l,u.leaveMorphArray,s),treeContainer.add(p),treeContainer.add(l),treeContainer.name="treeContainer",scene.add(treeContainer)}function t(e){var t=new Tree({seed:e.seed,segments:e.segments,levels:e.levels,vMultiplier:e.vMultiplier,twigScale:e.twigScale,initalBranchLength:e.initalBranchLength,lengthFalloffFactor:e.lengthFalloffFactor,lengthFalloffPower:e.lengthFalloffPower,clumpMax:e.clumpMax,clumpMin:e.clumpMin,branchFactor:e.branchFactor,dropAmount:e.dropAmount,growAmount:e.growAmount,sweepAmount:e.sweepAmount,maxRadius:e.maxRadius,climbRate:e.climbRate,trunkKink:e.trunkKink,treeSteps:e.treeSteps,taperRate:e.taperRate,radiusFalloffRate:e.radiusFalloffRate,twistRate:e.twistRate,trunkLength:e.trunkLength}),r=new THREE.Geometry,n=new THREE.Geometry;return t.verts.forEach(function(e){r.vertices.push(new THREE.Vector3(e[0],e[1],e[2]))}),t.vertsTwig.forEach(function(e){n.vertices.push(new THREE.Vector3(e[0],e[1],e[2]))}),t.faces.forEach(function(e){r.faces.push(new THREE.Face3(e[0],e[1],e[2]))}),t.facesTwig.forEach(function(e){n.faces.push(new THREE.Face3(e[0],e[1],e[2]))}),t.facesTwig.forEach(function(e){var r=t.uvsTwig[e[0]],a=t.uvsTwig[e[1]],o=t.uvsTwig[e[2]],i=new THREE.Vector2(r[0],r[1]),c=new THREE.Vector2(a[0],a[1]),d=new THREE.Vector2(o[0],o[1]);n.faceVertexUvs[0].push([i,c,d])}),t.faces.forEach(function(e){var n=t.UV[e[0]],a=t.UV[e[1]],o=t.UV[e[2]],i=new THREE.Vector2(n[0],n[1]),c=new THREE.Vector2(a[0],a[1]),d=new THREE.Vector2(o[0],o[1]);r.faceVertexUvs[0].push([i,c,d])}),{trunkGeom:r,leaveGeom:n}}function r(e,r,n){for(var a=[],o=[],c=i(r,n),d=[],u=0;u<c.length;u++){var s=(n[c[u]]-r[c[u]])/e;d.push(s)}for(var p=0;p<e;p++){var l=t(r);a.push(l.trunkGeom),o.push(l.leaveGeom);for(var u=0;u<c.length;u++)r[c[u]]+=d[u]}return{trunkMorphArray:a,leaveMorphArray:o}}function n(e){for(var t=[],r=0;r<e;r++)t.push("morph_"+r);return t}function a(){return s}function o(e,t,r){for(var n=0;n<t.length;n++){e.geometry.morphTargets.push({name:r[n]}),e.geometry.morphTargets[n].vertices=[];for(var a=0;a<t[n].vertices.length;a++)e.geometry.morphTargets[n].vertices.push(t[n].vertices[a])}}function i(e,t){var r=[];for(var n in e)e.hasOwnProperty(n)&&e[n]!==t[n]&&r.push(n);return r}function c(){return p}function d(){return l}var u,s,p,l,m=5;return{addTreeToScene:e,getMorphTargetNames:a,getTrunkMesh:c,getTwigMesh:d}}(),productivitree.transforms=function(e,t,r){return"SCALE"===t.toUpperCase()&&"undefined"==typeof r&&(r={x:.1,y:.1,z:.1}),"SCALE"===t.toUpperCase()?{setScale:function(){e.scale.x=r.x,e.scale.y=r.y,e.scale.z=r.z}}:{setRotate:function(){e.scale.x=r.x,e.scale.y=r.y,e.scale.z=r.z}}},productivitree.ui.stats=function(){function e(){stats=new Stats,stats.setMode(0),stats.domElement.style.position="absolute",stats.domElement.style.left="0px",stats.domElement.style.top="0px",document.body.appendChild(stats.domElement)}return{init:e}}();